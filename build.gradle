plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'idea'

group = 'org.ethereumclassic'
version = '0.3-SNAPSHOT'
def description = 'Lightweight Java client to Ethereum blockchain'

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "org.apache.httpcomponents:httpmime:$httpClientVersion"
    compile "org.apache.httpcomponents:httpclient:$httpClientVersion"
    compile "org.bouncycastle:bcprov-jdk15on:$bcprovVersion"

    testCompile "org.objenesis:objenesis:$objenesisVersion"
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
    testCompile "org.spockframework:spock-core:$spockVersion"

}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.options.compilerArgs \
        << "-Xlint:unchecked" << "-Xlint:deprecation"

publishing {
    publications {
        EtherJarPublication(MavenPublication) {
            from components.java
            artifact sourceJar
            pom.withXml {
                asNode().appendNode('description', description)
            }
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['EtherJarPublication']
    pkg {
        repo = 'EtherJar'
        name = 'etherjar'
        userOrg = 'ethereumproject'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/ethereumproject/etherjar.git'
        labels = ['etherjar', 'etc']
        publicDownloadNumbers = true
        version {
            name = project.version
            description = project.description
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy(jacocoTestReport)

