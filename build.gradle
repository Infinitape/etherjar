/*
 * Copyright (c) 2016-2017 Infinitape Inc, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'idea'

group = 'io.infinitape'
version = '0.1-SNAPSHOT'
description = 'Framework agnostic modular Java 8 integration library for Ethereum blockchain, including Ethereum Classic (ETC) and J.P. Morgan Quorumâ„¢ (not implemented yet).'

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "org.apache.httpcomponents:httpmime:$httpClientVersion"
    compile "org.apache.httpcomponents:httpclient:$httpClientVersion"
    compile "org.bouncycastle:bcprov-jdk15on:$bcprovVersion"

    testCompile "org.objenesis:objenesis:$objenesisVersion"
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
    testCompile "org.spockframework:spock-core:$spockVersion"
    testCompile "nl.jqno.equalsverifier:equalsverifier:$equalsverifier"
}

test {
    jvmArgs '-ea'

    testLogging {
        events "failed"
        exceptionFormat "short"
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.options.compilerArgs \
        << "-Xlint:unchecked" << "-Xlint:deprecation"

publishing {
    publications {
        EtherJarPublication(MavenPublication) {
            from components.java
            artifact sourceJar
            pom.withXml {
                asNode().appendNode('description', description)
            }
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5.1'
}

bintray {
    user = project.hasProperty('bintrayUser') ?
            project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ?
            project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['EtherJarPublication']
    pkg {
        repo = 'etherjar'
        name = 'etherjar'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/infinitape/etherjar.git'
        labels = ['etherjar', 'etc', 'ethereum', 'blockchain']
        publicDownloadNumbers = true
        version {
            name = project.version
            description = project.description
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy(jacocoTestReport)
