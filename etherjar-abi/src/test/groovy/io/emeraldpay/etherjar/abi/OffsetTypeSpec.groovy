package io.emeraldpay.etherjar.abi

import io.emeraldpay.etherjar.hex.Hex32
import io.emeraldpay.etherjar.hex.HexData
import spock.lang.Specification

class OffsetTypeSpec extends Specification {

    def "Parse basic two uint256"() {
        setup:
        def data = HexData.from("0x" +
            "0000000000000000000000000000000000000000000000000000000000000020" +
            "0000000000000000000000000000000000000000000000000000000000000004" +
            "5553445400000000000000000000000000000000000000000000000000000000"
        )
        when:
        def act = new OffsetType().decode(data)
        then:
        act == HexData.from("0x" +
            "0000000000000000000000000000000000000000000000000000000000000004" +
            "5553445400000000000000000000000000000000000000000000000000000000"
        )
    }

    def "Parse basic three uint256"() {
        setup:
        def data = HexData.from("0x" +
            "0000000000000000000000000000000000000000000000000000000000000020" +
            "0000000000000000000000000000000000000000000000000000000000000022" +
            "434f5645525f594541524e5f323032315f30325f32385f4441495f305f434c41" +
            "494d000000000000000000000000000000000000000000000000000000000000"
        )
        when:
        def act = new OffsetType().decode(data)
        then:
        act == HexData.from("0x" +
            "0000000000000000000000000000000000000000000000000000000000000022" +
            "434f5645525f594541524e5f323032315f30325f32385f4441495f305f434c41" +
            "494d000000000000000000000000000000000000000000000000000000000000"
        )
    }

    def "Parse three uint256 as second element"() {
        setup:
        def data = HexData.from("0x" +
            "0000000000000000000000000000000000000000000000000000000000000022" +
            "0000000000000000000000000000000000000000000000000000000000000040" +
            "434f5645525f594541524e5f323032315f30325f32385f4441495f305f434c41" +
            "494d000000000000000000000000000000000000000000000000000000000000"
        )
        when:
        def act = new OffsetType().decode(Hex32.SIZE_BYTES, data)
        then:
        act == HexData.from("0x" +
            "434f5645525f594541524e5f323032315f30325f32385f4441495f305f434c41" +
            "494d000000000000000000000000000000000000000000000000000000000000"
        )
    }

    def "Parse three uint256 as second element of three"() {
        setup:
        def data = HexData.from("0x" +
            "0000000000000000000000000000000000000000000000000000000000000011" +
            "0000000000000000000000000000000000000000000000000000000000000060" +
            "0000000000000000000000000000000000000000000000000000000000000022" +
            "434f5645525f594541524e5f323032315f30325f32385f4441495f305f434c41" +
            "494d000000000000000000000000000000000000000000000000000000000000"
        )
        when:
        def act = new OffsetType().decode(Hex32.SIZE_BYTES, data)
        then:
        act == HexData.from("0x" +
            "434f5645525f594541524e5f323032315f30325f32385f4441495f305f434c41" +
            "494d000000000000000000000000000000000000000000000000000000000000"
        )
    }
}
